There are N students in a class, where the i-th student has a score of Ai.

The i-th student will boast if and only if the number of students scoring less than or equal Ai is greater than the number of students scoring greater than Ai.

Find the number of students who will boast.

Input Format
The first line contains T - the number of test cases. Then the test cases follow.
The first line of each test case contains a single integer N - the number of students.
The second line of each test case contains N integers A1,A2,…,AN - the scores of the students.
Output Format
For each test case, output in a single line the number of students who will boast.

Constraints
1≤T≤1000
1≤N≤100
0≤Ai≤100
Sample Input 1 
3
3
100 100 100
3
2 1 3
4
30 1 30 30
Sample Output 1 
3
2
3
Explanation
Test case 1: All three students got the highest score. So all three of them will boast.
Test case 2: Only the student with score 1 will not be able to boast.
Test case 3: Only the student with score 1 will not be able to boast.
------------------------------------------------------------------------
import java.io.*;
import java.util.*;

class avg {
  public static void main(String[] args) {
    
    Scanner sc = new Scanner(System.in);
    int t = sc.nextInt();  
       
    for(int i=0;i<t;i++){
      int n = sc.nextInt(); 
      int[] val = new int[n];
      
      for(int j=0;j<val.length;j++){
        int a = sc.nextInt();
        val[j] = a;
      }
      int count = 0;
      for(int k=0;k<n;k++){
        int equal = 0;
        int notequal = 0;
        for(int p=0;p<n;p++){
          if(k!=p){
             if(val[k]>=val[p]){
            equal++;
           } // else{
          //   notequal++;
          // }
          }
        } 
          int cal = (n-1)-equal;
         if(equal>=cal){
          count++;
        }     
     // System.out.println("equal"+equal+"notequal"+notequal);
      }
       System.out.println(count);
      }
    }
}

